/* Generated By:JavaCC: Do not edit this line. RMBParserConstants.java */
package editors.rmb.parser;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RMBParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SPACES = 1;
  /** RegularExpression Id. */
  int NEWLINE = 2;
  /** RegularExpression Id. */
  int LINE_COMMENT = 3;
  /** RegularExpression Id. */
  int INTEGER = 4;
  /** RegularExpression Id. */
  int REAL = 5;
  /** RegularExpression Id. */
  int COMPLEX = 6;
  /** RegularExpression Id. */
  int DIM = 7;
  /** RegularExpression Id. */
  int REDIM = 8;
  /** RegularExpression Id. */
  int MAT = 9;
  /** RegularExpression Id. */
  int LET = 10;
  /** RegularExpression Id. */
  int IF = 11;
  /** RegularExpression Id. */
  int THEN = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int SELECT = 14;
  /** RegularExpression Id. */
  int CASE = 15;
  /** RegularExpression Id. */
  int WHILE = 16;
  /** RegularExpression Id. */
  int FOR = 17;
  /** RegularExpression Id. */
  int TO = 18;
  /** RegularExpression Id. */
  int STEP = 19;
  /** RegularExpression Id. */
  int NEXT = 20;
  /** RegularExpression Id. */
  int REPEAT = 21;
  /** RegularExpression Id. */
  int UNTIL = 22;
  /** RegularExpression Id. */
  int LOOP = 23;
  /** RegularExpression Id. */
  int RETURN = 24;
  /** RegularExpression Id. */
  int GET = 25;
  /** RegularExpression Id. */
  int SUB = 26;
  /** RegularExpression Id. */
  int SUBEND = 27;
  /** RegularExpression Id. */
  int GOTO = 28;
  /** RegularExpression Id. */
  int GOSUB = 29;
  /** RegularExpression Id. */
  int DEF = 30;
  /** RegularExpression Id. */
  int FNEND = 31;
  /** RegularExpression Id. */
  int COM = 32;
  /** RegularExpression Id. */
  int PAUSE = 33;
  /** RegularExpression Id. */
  int STOP = 34;
  /** RegularExpression Id. */
  int END = 35;
  /** RegularExpression Id. */
  int NOT = 36;
  /** RegularExpression Id. */
  int DIV = 37;
  /** RegularExpression Id. */
  int EXOR = 38;
  /** RegularExpression Id. */
  int OR = 39;
  /** RegularExpression Id. */
  int AND = 40;
  /** RegularExpression Id. */
  int MOD = 41;
  /** RegularExpression Id. */
  int LOADSUB = 42;
  /** RegularExpression Id. */
  int ALL = 43;
  /** RegularExpression Id. */
  int FROM = 44;
  /** RegularExpression Id. */
  int CALL = 45;
  /** RegularExpression Id. */
  int OPTION = 46;
  /** RegularExpression Id. */
  int BASE = 47;
  /** RegularExpression Id. */
  int EXIT = 48;
  /** RegularExpression Id. */
  int IDENTIFIER = 49;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 50;
  /** RegularExpression Id. */
  int REAL_LITERAL = 51;
  /** RegularExpression Id. */
  int STRING_LITERAL = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<SPACES>",
    "<NEWLINE>",
    "<LINE_COMMENT>",
    "\"INTEGER\"",
    "\"REAL\"",
    "\"COMPLEX\"",
    "\"DIM\"",
    "\"REDIM\"",
    "\"MAT\"",
    "\"LET\"",
    "\"IF\"",
    "\"THEN\"",
    "\"ELSE\"",
    "\"SELECT\"",
    "\"CASE\"",
    "\"WHILE\"",
    "\"FOR\"",
    "\"TO\"",
    "\"STEP\"",
    "\"NEXT\"",
    "\"REPEAT\"",
    "\"UNTIL\"",
    "\"LOOP\"",
    "\"RETURN\"",
    "\"GET\"",
    "\"SUB\"",
    "\"SUBEND\"",
    "\"GOTO\"",
    "\"GOSUB\"",
    "\"DEF\"",
    "\"FNEND\"",
    "\"COM\"",
    "\"PAUSE\"",
    "\"STOP\"",
    "\"END\"",
    "\"NOT\"",
    "\"DIV\"",
    "\"EXOR\"",
    "\"OR\"",
    "\"AND\"",
    "\"MOD\"",
    "\"LOADSUB\"",
    "\"ALL\"",
    "\"FROM\"",
    "\"CALL\"",
    "\"OPTION\"",
    "\"BASE\"",
    "\"EXIT\"",
    "<IDENTIFIER>",
    "<INTEGER_LITERAL>",
    "<REAL_LITERAL>",
    "<STRING_LITERAL>",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\"(*)\"",
    "\"+\"",
    "\"-\"",
    "\"=\"",
    "\"*\"",
    "\"/\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"<>\"",
  };

}
